{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "77334478",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empty DataFrame\n",
      "Columns: [Job Title, Job Location, Company Name]\n",
      "Index: []\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "\n",
    "# Define the URL and parameters\n",
    "url = \"https://www.shine.com/job-search/data-scientist-jobs-in-bangalore\"\n",
    "headers = {\n",
    "    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\"\n",
    "}\n",
    "\n",
    "# Send a GET request to the website\n",
    "response = requests.get(url, headers=headers)\n",
    "\n",
    "# Check if the request was successful\n",
    "if response.status_code == 200:\n",
    "    soup = BeautifulSoup(response.text, \"html.parser\")\n",
    "\n",
    "    # Initialize lists to store scraped data\n",
    "    job_titles = []\n",
    "    job_locations = []\n",
    "    company_names = []\n",
    "\n",
    "    # Find the job listings\n",
    "    job_listings = soup.find_all(\"li\", class_=\"search_listing\")\n",
    "\n",
    "    # Loop through the first 10 job listings\n",
    "    for listing in job_listings[:10]:\n",
    "        job_title = listing.find(\"a\", class_=\"job_title\").text.strip()\n",
    "        job_location = listing.find(\"span\", class_=\"job_location\").text.strip()\n",
    "        company_name = listing.find(\"a\", class_=\"comp_name\").text.strip()\n",
    "\n",
    "        job_titles.append(job_title)\n",
    "        job_locations.append(job_location)\n",
    "        company_names.append(company_name)\n",
    "\n",
    "    # Create a DataFrame from the scraped data\n",
    "    job_data = pd.DataFrame({\n",
    "        \"Job Title\": job_titles,\n",
    "        \"Job Location\": job_locations,\n",
    "        \"Company Name\": company_names\n",
    "    })\n",
    "\n",
    "    # Display the DataFrame\n",
    "    print(job_data)\n",
    "\n",
    "else:\n",
    "    print(\"Failed to retrieve the webpage.\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "913cd8b0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
